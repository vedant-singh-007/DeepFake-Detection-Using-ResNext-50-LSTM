{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"16OYVfhAgF3q1BDLZHrPkfIi8BNASea7d","authorship_tag":"ABX9TyOaibDF688dHvjts7iO0/w1"},"accelerator":"GPU","kaggle":{"accelerator":"none","dataSources":[],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport cv2\nimport numpy as np\nfrom tqdm import tqdm\nimport pandas as pd\nfrom glob import glob","metadata":{"id":"npmPCACts74t","executionInfo":{"status":"ok","timestamp":1747850255079,"user_tz":-330,"elapsed":1627,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:47.863910Z","iopub.execute_input":"2025-05-22T10:09:47.864551Z","iopub.status.idle":"2025-05-22T10:09:48.246477Z","shell.execute_reply.started":"2025-05-22T10:09:47.864523Z","shell.execute_reply":"2025-05-22T10:09:48.245665Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"import os\n\n# Adjust the path based on actual folder location\nfake_folder = '/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake'\nreal_folder = '/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real'\n\n# Check if paths exist\nprint(\"Fake folder exists:\", os.path.exists(fake_folder))\nprint(\"Real folder exists:\", os.path.exists(real_folder))","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r-gkIuuCxj7z","executionInfo":{"status":"ok","timestamp":1747850255095,"user_tz":-330,"elapsed":16,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"97bab68d-0451-4579-d0a6-b275cf83bd4c","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:48.247156Z","iopub.execute_input":"2025-05-22T10:09:48.247544Z","iopub.status.idle":"2025-05-22T10:09:48.276651Z","shell.execute_reply.started":"2025-05-22T10:09:48.247524Z","shell.execute_reply":"2025-05-22T10:09:48.275991Z"}},"outputs":[{"name":"stdout","text":"Fake folder exists: True\nReal folder exists: True\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"from glob import glob\n\nfake_videos = sorted(glob(os.path.join(fake_folder, '*.mp4')))\nreal_videos = sorted(glob(os.path.join(real_folder, '*.mp4')))\n\nprint(\"Number of fake videos:\", len(fake_videos))\nprint(\"Number of real videos:\", len(real_videos))","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d5L4eXkOxtCq","executionInfo":{"status":"ok","timestamp":1747850255143,"user_tz":-330,"elapsed":43,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"0282742e-b0f0-4a4f-beb5-531226d02165","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:48.277427Z","iopub.execute_input":"2025-05-22T10:09:48.277726Z","iopub.status.idle":"2025-05-22T10:09:48.285291Z","shell.execute_reply.started":"2025-05-22T10:09:48.277702Z","shell.execute_reply":"2025-05-22T10:09:48.284576Z"}},"outputs":[{"name":"stdout","text":"Number of fake videos: 153\nNumber of real videos: 153\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"all_videos =  real_videos+fake_videos\nlabels = [0]*len(real_videos) + [1]*len(fake_videos)  # 1 = Fake, 0 = Real\n\n# Example:\nfor video, label in zip(all_videos, labels):\n    print(f\"{video} -> {'Fake' if label == 1 else 'Real'}\")","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iV4wh2A5xwJd","executionInfo":{"status":"ok","timestamp":1747850255353,"user_tz":-330,"elapsed":172,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"b1bcf75e-c0a1-49d1-e272-018ce037fa8a","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:48.286140Z","iopub.execute_input":"2025-05-22T10:09:48.286384Z","iopub.status.idle":"2025-05-22T10:09:48.305294Z","shell.execute_reply.started":"2025-05-22T10:09:48.286343Z","shell.execute_reply":"2025-05-22T10:09:48.304434Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00000.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00001.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00002.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00003.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00004.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00005.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00006.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00007.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00008.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00009.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00010.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00011.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00012.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00013.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00014.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00015.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00016.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00017.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00018.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00019.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00020.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00021.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00022.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00023.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00024.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00025.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00026.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00027.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00028.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00029.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00030.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00031.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00032.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00033.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00034.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00035.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00036.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00037.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00038.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00039.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00040.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00041.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00042.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00043.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00044.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00045.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00046.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00047.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00048.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00049.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00050.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00051.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00052.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00053.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00054.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00055.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00056.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00057.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00058.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00059.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00060.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00061.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00062.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00063.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00064.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00065.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00066.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00067.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00068.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00069.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00070.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00071.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00072.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00073.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00074.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00075.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00076.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00077.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00078.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00079.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00080.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00081.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00082.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00083.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00084.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00085.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00086.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00087.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00088.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00089.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00090.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00091.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00092.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00093.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00094.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00095.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00096.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00097.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00098.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00099.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00100.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00101.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00102.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00103.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00104.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00105.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00106.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00107.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00108.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00109.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00110.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00111.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00112.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00113.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00114.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00115.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00116.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00117.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00118.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00119.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00120.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00121.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00122.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00123.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00124.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00125.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00126.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00127.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00128.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00129.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00130.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00131.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00132.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00133.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00134.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00135.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00136.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00137.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00138.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00139.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00140.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00141.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00142.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00143.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00144.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00145.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00146.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00147.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00148.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00149.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00150.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00151.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real/00152.mp4 -> Real\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0008.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id16_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id17_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id1_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id20_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id21_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id23_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0008.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id26_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0008.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id28_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0008.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id2_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0008.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id3_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id4_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id6_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id6_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id6_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id6_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id6_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id6_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0008.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id0_id9_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id0_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id2_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id3_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0002.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0003.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0004.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0005.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0006.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0007.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id4_0009.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id6_0000.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id6_0001.mp4 -> Fake\n/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake/id1_id6_0002.mp4 -> Fake\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"frame_count = []\nfor video_file in all_videos:\n  cap = cv2.VideoCapture(video_file)\n  frame_count.append(int(cap.get(cv2.CAP_PROP_FRAME_COUNT)))\nprint(\"frames are \" , frame_count)\nprint(\"Total no of video: \" , len(frame_count))\nprint('Average frame per video:',np.mean(frame_count))","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b8g-qKLuyEVx","executionInfo":{"status":"ok","timestamp":1747850371724,"user_tz":-330,"elapsed":116369,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"7db5e82b-a4d0-4932-aa2a-60da28b3e79c","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:48.306205Z","iopub.execute_input":"2025-05-22T10:09:48.306461Z","iopub.status.idle":"2025-05-22T10:09:49.340284Z","shell.execute_reply.started":"2025-05-22T10:09:48.306435Z","shell.execute_reply":"2025-05-22T10:09:49.339438Z"}},"outputs":[{"name":"stdout","text":"frames are  [450, 415, 512, 295, 450, 463, 486, 474, 477, 575, 422, 470, 397, 474, 461, 442, 319, 282, 435, 468, 456, 462, 471, 463, 547, 470, 499, 481, 473, 463, 472, 510, 463, 461, 505, 458, 550, 455, 467, 459, 381, 456, 383, 472, 464, 459, 471, 489, 484, 476, 470, 367, 464, 468, 417, 468, 534, 466, 507, 474, 478, 412, 478, 477, 429, 493, 457, 474, 476, 432, 357, 508, 478, 475, 471, 474, 479, 475, 492, 386, 478, 452, 462, 359, 408, 658, 482, 468, 493, 485, 416, 455, 549, 495, 414, 487, 305, 502, 453, 494, 534, 440, 457, 474, 499, 504, 327, 462, 478, 264, 479, 467, 477, 504, 340, 312, 471, 462, 474, 424, 468, 468, 362, 303, 421, 280, 455, 483, 460, 467, 398, 357, 350, 499, 481, 354, 293, 353, 481, 553, 382, 445, 450, 462, 451, 469, 722, 514, 459, 506, 461, 504, 698, 469, 303, 350, 529, 326, 459, 534, 479, 464, 520, 469, 303, 350, 529, 459, 534, 479, 520, 469, 303, 350, 529, 459, 534, 479, 520, 469, 303, 350, 529, 326, 459, 534, 479, 520, 469, 303, 350, 529, 326, 459, 534, 479, 520, 469, 303, 350, 326, 459, 479, 520, 469, 303, 350, 529, 326, 459, 534, 479, 464, 520, 469, 303, 350, 529, 326, 459, 534, 479, 464, 520, 469, 303, 350, 529, 326, 459, 534, 479, 464, 520, 469, 303, 350, 529, 326, 459, 534, 479, 464, 520, 469, 303, 350, 529, 326, 459, 534, 520, 469, 303, 350, 534, 479, 520, 469, 303, 350, 529, 459, 534, 479, 464, 520, 365, 272, 400, 451, 409, 422, 505, 328, 412, 365, 272, 400, 451, 409, 422, 505, 328, 412, 365, 272, 400, 451, 409, 422, 505, 328, 412, 365, 272, 400, 451, 409, 422, 505, 328, 412, 365, 272, 400]\nTotal no of video:  306\nAverage frame per video: 442.9281045751634\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"output_video_folder = \"/kaggle/working/output_videos\"\nos.makedirs(output_video_folder, exist_ok=True)\n\nlabel_file_path = os.path.join(output_video_folder, \"labels.csv\")\nlabel_entries = []\n","metadata":{"id":"lF92C4jay3sS","executionInfo":{"status":"ok","timestamp":1747850371725,"user_tz":-330,"elapsed":45,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:49.342653Z","iopub.execute_input":"2025-05-22T10:09:49.342863Z","iopub.status.idle":"2025-05-22T10:09:49.347027Z","shell.execute_reply.started":"2025-05-22T10:09:49.342844Z","shell.execute_reply":"2025-05-22T10:09:49.346205Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"!pip install facenet-pytorch --no-deps --quiet\n\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4FxFGGzd0pSt","executionInfo":{"status":"ok","timestamp":1747850402161,"user_tz":-330,"elapsed":30445,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"dab3fa5f-a796-42a8-e9ac-307d0b62f209","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:49.347697Z","iopub.execute_input":"2025-05-22T10:09:49.347883Z","iopub.status.idle":"2025-05-22T10:09:50.841947Z","shell.execute_reply.started":"2025-05-22T10:09:49.347868Z","shell.execute_reply":"2025-05-22T10:09:50.841058Z"}},"outputs":[{"name":"stdout","text":"\u001b[33mWARNING: Ignoring invalid distribution ~riton (/usr/local/lib/python3.11/dist-packages)\u001b[0m\u001b[33m\n\u001b[0m\u001b[33mWARNING: Ignoring invalid distribution ~riton (/usr/local/lib/python3.11/dist-packages)\u001b[0m\u001b[33m\n\u001b[0m","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"import os\nimport cv2\nimport numpy as np\nimport torch\nfrom PIL import Image\nfrom facenet_pytorch import MTCNN\nfrom tqdm import tqdm\n\n# Initialize MTCNN face detector (GPU if available)\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nmtcnn = MTCNN(keep_all=True, device=device)\n\ndef process_video_to_output(video_path, output_folder, label, max_frames=150, size=(224, 224)):\n    cap = cv2.VideoCapture(video_path)\n    frames = []\n    video_name = os.path.splitext(os.path.basename(video_path))[0]\n\n    while True:\n        ret, frame = cap.read()\n        if not ret:\n            break\n\n        # Convert frame to PIL image and RGB\n        img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n\n        # Detect faces\n        boxes, _ = mtcnn.detect(img)\n\n        if boxes is not None and len(boxes) > 0:\n            # Pick largest face\n            areas = [(x2 - x1) * (y2 - y1) for x1, y1, x2, y2 in boxes]\n            largest_idx = np.argmax(areas)\n            x1, y1, x2, y2 = boxes[largest_idx].astype(int)\n\n            # Crop and resize\n            face_crop = frame[y1:y2, x1:x2]\n            if face_crop.size == 0:\n                continue\n            face_crop = cv2.resize(face_crop, size)\n            frames.append(face_crop)\n\n            if len(frames) >= max_frames:\n                break\n\n    cap.release()\n\n    if len(frames) == 0:\n        print(f\"Skipping: {video_name} (no face detected)\")\n        return None\n\n    # Pad or trim\n    if len(frames) < max_frames:\n        frames += [frames[-1]] * (max_frames - len(frames))\n    else:\n        frames = frames[:max_frames]\n\n    # Save video\n    os.makedirs(output_folder, exist_ok=True)\n    output_path = os.path.join(output_folder, f\"{video_name}.mp4\")\n    fourcc = cv2.VideoWriter_fourcc(*'mp4v')\n    out = cv2.VideoWriter(output_path, fourcc, 25.0, size)\n\n    for frame in frames:\n        out.write(frame)\n    out.release()\n\n    print(f\"Saved: {output_path}\")\n    return video_name, label\n","metadata":{"id":"Wzs_h4Esy9JJ","executionInfo":{"status":"ok","timestamp":1747850426668,"user_tz":-330,"elapsed":24506,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:50.843263Z","iopub.execute_input":"2025-05-22T10:09:50.843669Z","iopub.status.idle":"2025-05-22T10:09:54.163480Z","shell.execute_reply.started":"2025-05-22T10:09:50.843634Z","shell.execute_reply":"2025-05-22T10:09:54.162871Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"from tqdm import tqdm\nimport cv2\nimport os\nfrom glob import glob\n# No need to import CascadeClassifier if not used.\n# from cv2 import CascadeClassifier # This import is not used and can be removed\n\nfake_folder = '/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_fake'\nreal_folder = '/kaggle/input/videos/SDFVD Small-scale Deepfake Forgery Video Dataset/videos_real'\n\nfake_videos = sorted(glob(os.path.join(fake_folder, '*.mp4')))\nreal_videos = sorted(glob(os.path.join(real_folder, '*.mp4')))\n\nall_video_paths = [(path, 1) for path in fake_videos] + [(path, 0) for path in real_videos]\n\n\nfor path, label in tqdm(all_video_paths):\n    try:\n        result = process_video_to_output(path, output_video_folder, label)\n        if result:\n            video_name, label = result\n            label_entries.append((video_name, label))\n    except Exception as e:\n        # Print the path of the video file that caused the error\n        print(f\"\\nError processing video: {path}\")\n        print(f\"Error details: {e}\")\n        # Continue to the next video file\n        continue","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nj54e8cYzAZy","outputId":"bbe2b57e-4b10-4673-df45-e3a7bb1f906f","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:09:54.164256Z","iopub.execute_input":"2025-05-22T10:09:54.164592Z","iopub.status.idle":"2025-05-22T10:50:25.345121Z","shell.execute_reply.started":"2025-05-22T10:09:54.164573Z","shell.execute_reply":"2025-05-22T10:50:25.344337Z"}},"outputs":[{"name":"stderr","text":"  0%|          | 1/306 [00:07<40:38,  8.00s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":"  1%|          | 2/306 [00:14<36:43,  7.25s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":"  1%|          | 3/306 [00:23<40:19,  7.98s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":"  1%|▏         | 4/306 [00:30<37:45,  7.50s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 5/306 [00:38<38:08,  7.60s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 6/306 [00:48<43:24,  8.68s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 7/306 [01:00<47:20,  9.50s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 8/306 [01:08<46:03,  9.27s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 9/306 [01:15<41:22,  8.36s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0008.mp4\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 10/306 [01:23<40:30,  8.21s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id16_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":"  4%|▎         | 11/306 [01:30<39:02,  7.94s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":"  4%|▍         | 12/306 [01:36<36:41,  7.49s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":"  4%|▍         | 13/306 [01:45<38:10,  7.82s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":"  5%|▍         | 14/306 [01:52<36:12,  7.44s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":"  5%|▍         | 15/306 [02:02<40:25,  8.33s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":"  5%|▌         | 16/306 [02:13<44:14,  9.15s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 17/306 [02:22<43:13,  8.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 18/306 [02:29<41:20,  8.61s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id17_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 19/306 [02:37<39:25,  8.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 20/306 [02:43<36:45,  7.71s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 21/306 [02:52<37:58,  8.00s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 22/306 [02:58<35:45,  7.56s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 23/306 [03:09<39:42,  8.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 24/306 [03:20<43:14,  9.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 25/306 [03:29<42:25,  9.06s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 26/306 [03:36<40:40,  8.72s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id1_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 27/306 [03:44<38:32,  8.29s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 28/306 [03:50<35:52,  7.74s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 29/306 [03:59<36:51,  7.98s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 10%|▉         | 30/306 [04:05<34:43,  7.55s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 31/306 [04:13<35:01,  7.64s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 32/306 [04:24<38:43,  8.48s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 33/306 [04:34<41:44,  9.17s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 34/306 [04:43<41:14,  9.10s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 11%|█▏        | 35/306 [04:51<39:12,  8.68s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id20_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 36/306 [04:58<37:05,  8.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 37/306 [05:05<34:28,  7.69s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 38/306 [05:13<35:46,  8.01s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 39/306 [05:20<33:39,  7.56s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 40/306 [05:27<33:27,  7.55s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 41/306 [05:38<37:04,  8.39s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▎        | 42/306 [05:49<40:15,  9.15s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▍        | 43/306 [05:57<39:28,  9.01s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▍        | 44/306 [06:05<37:40,  8.63s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id21_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 45/306 [06:12<35:37,  8.19s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▌        | 46/306 [06:19<33:17,  7.68s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▌        | 47/306 [06:27<34:24,  7.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▌        | 48/306 [06:35<33:38,  7.82s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▌        | 49/306 [06:45<36:50,  8.60s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▋        | 50/306 [06:54<37:02,  8.68s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 51/306 [07:02<35:39,  8.39s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id23_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 52/306 [07:09<34:03,  8.04s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 53/306 [07:16<31:58,  7.58s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 54/306 [07:24<33:08,  7.89s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 55/306 [07:31<31:25,  7.51s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 56/306 [07:38<31:21,  7.53s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▊        | 57/306 [07:49<34:53,  8.41s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▉        | 58/306 [08:00<37:49,  9.15s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▉        | 59/306 [08:08<37:04,  9.01s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 60/306 [08:15<33:31,  8.18s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0008.mp4\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 61/306 [08:22<32:44,  8.02s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id26_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 20%|██        | 62/306 [08:30<31:40,  7.79s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 63/306 [08:36<29:57,  7.40s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 64/306 [08:45<31:19,  7.77s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 65/306 [08:51<29:48,  7.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 66/306 [08:59<29:59,  7.50s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 67/306 [09:10<33:26,  8.40s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 68/306 [09:20<36:12,  9.13s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 69/306 [09:29<35:46,  9.06s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 70/306 [09:36<32:25,  8.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0008.mp4\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 71/306 [09:43<31:42,  8.10s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id28_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▎       | 72/306 [09:51<30:33,  7.84s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 73/306 [09:57<28:53,  7.44s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 74/306 [10:06<30:10,  7.81s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▍       | 75/306 [10:12<28:39,  7.44s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▍       | 76/306 [10:20<28:48,  7.51s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 77/306 [10:31<32:05,  8.41s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 78/306 [10:41<34:49,  9.16s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 79/306 [10:50<34:12,  9.04s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 80/306 [10:57<31:07,  8.26s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0008.mp4\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▋       | 81/306 [11:05<30:37,  8.17s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id2_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 82/306 [11:12<29:30,  7.90s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 83/306 [11:18<27:46,  7.47s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 84/306 [11:27<28:56,  7.82s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 85/306 [11:34<27:38,  7.50s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 86/306 [11:41<27:31,  7.50s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 87/306 [11:52<30:32,  8.37s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▉       | 88/306 [12:03<33:20,  9.18s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▉       | 89/306 [12:11<32:42,  9.04s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▉       | 90/306 [12:18<29:34,  8.22s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0008.mp4\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 91/306 [12:26<29:00,  8.09s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id3_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 30%|███       | 92/306 [12:33<28:03,  7.87s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 30%|███       | 93/306 [12:39<26:21,  7.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 94/306 [12:48<27:28,  7.77s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 95/306 [12:54<26:06,  7.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 31%|███▏      | 96/306 [13:02<26:01,  7.44s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 97/306 [13:12<29:03,  8.34s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 98/306 [13:23<31:39,  9.13s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 99/306 [13:31<30:10,  8.74s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id4_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 100/306 [13:39<28:34,  8.32s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id6_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 101/306 [13:45<26:33,  7.77s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id6_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 102/306 [13:54<27:20,  8.04s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id6_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▎      | 103/306 [14:05<30:21,  8.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id6_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 104/306 [14:14<30:04,  8.93s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id6_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 105/306 [14:22<28:52,  8.62s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id6_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▍      | 106/306 [14:29<27:25,  8.23s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▍      | 107/306 [14:35<25:32,  7.70s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▌      | 108/306 [14:44<26:25,  8.01s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▌      | 109/306 [14:51<24:53,  7.58s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▌      | 110/306 [15:01<27:39,  8.47s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▋      | 111/306 [15:12<30:04,  9.25s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 112/306 [15:21<29:19,  9.07s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 113/306 [15:27<26:32,  8.25s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0008.mp4\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 114/306 [15:35<25:58,  8.12s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id0_id9_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 115/306 [15:40<22:59,  7.22s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 116/306 [15:45<20:47,  6.56s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 117/306 [15:50<19:19,  6.14s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▊      | 118/306 [15:56<19:04,  6.09s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 119/306 [16:01<17:12,  5.52s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 120/306 [16:05<16:33,  5.34s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 40%|███▉      | 121/306 [16:11<16:15,  5.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 40%|███▉      | 122/306 [16:19<18:37,  6.07s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 40%|████      | 123/306 [16:27<21:00,  6.89s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id0_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 41%|████      | 124/306 [16:33<19:28,  6.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 41%|████      | 125/306 [16:38<18:04,  5.99s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 41%|████      | 126/306 [16:43<17:19,  5.77s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 127/306 [16:49<17:34,  5.89s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 128/306 [16:53<16:07,  5.44s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 129/306 [16:58<15:35,  5.29s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 130/306 [17:04<15:24,  5.25s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 131/306 [17:11<17:39,  6.06s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 132/306 [17:20<19:59,  6.89s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id2_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 133/306 [17:26<18:33,  6.43s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 44%|████▍     | 134/306 [17:31<17:06,  5.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 44%|████▍     | 135/306 [17:36<16:24,  5.76s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 44%|████▍     | 136/306 [17:42<16:29,  5.82s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 45%|████▍     | 137/306 [17:46<15:00,  5.33s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 45%|████▌     | 138/306 [17:51<14:35,  5.21s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 45%|████▌     | 139/306 [17:56<14:23,  5.17s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 46%|████▌     | 140/306 [18:04<16:23,  5.93s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 46%|████▌     | 141/306 [18:12<18:32,  6.74s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id3_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 46%|████▋     | 142/306 [18:17<17:09,  6.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 47%|████▋     | 143/306 [18:22<15:56,  5.87s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 47%|████▋     | 144/306 [18:28<15:15,  5.65s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 47%|████▋     | 145/306 [18:34<15:23,  5.74s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 48%|████▊     | 146/306 [18:38<14:03,  5.27s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 48%|████▊     | 147/306 [18:43<13:36,  5.14s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 48%|████▊     | 148/306 [18:47<13:24,  5.09s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 49%|████▊     | 149/306 [18:55<15:28,  5.91s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 49%|████▉     | 150/306 [19:04<17:30,  6.74s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id4_0009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 49%|████▉     | 151/306 [19:09<16:11,  6.27s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id6_0000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 50%|████▉     | 152/306 [19:14<15:02,  5.86s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id6_0001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 50%|█████     | 153/306 [19:19<14:21,  5.63s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/id1_id6_0002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 50%|█████     | 154/306 [19:30<17:55,  7.08s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00000.mp4\n","output_type":"stream"},{"name":"stderr","text":" 51%|█████     | 155/306 [19:40<20:35,  8.18s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00001.mp4\n","output_type":"stream"},{"name":"stderr","text":" 51%|█████     | 156/306 [19:48<20:21,  8.15s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00002.mp4\n","output_type":"stream"},{"name":"stderr","text":" 51%|█████▏    | 157/306 [19:56<19:48,  7.98s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00003.mp4\n","output_type":"stream"},{"name":"stderr","text":" 52%|█████▏    | 158/306 [20:03<18:48,  7.62s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00004.mp4\n","output_type":"stream"},{"name":"stderr","text":" 52%|█████▏    | 159/306 [20:09<17:38,  7.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00005.mp4\n","output_type":"stream"},{"name":"stderr","text":" 52%|█████▏    | 160/306 [20:16<17:13,  7.08s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00006.mp4\n","output_type":"stream"},{"name":"stderr","text":" 53%|█████▎    | 161/306 [20:29<21:39,  8.96s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00007.mp4\n","output_type":"stream"},{"name":"stderr","text":" 53%|█████▎    | 162/306 [20:39<21:49,  9.09s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00008.mp4\n","output_type":"stream"},{"name":"stderr","text":" 53%|█████▎    | 163/306 [20:49<22:40,  9.52s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00009.mp4\n","output_type":"stream"},{"name":"stderr","text":" 54%|█████▎    | 164/306 [20:56<20:25,  8.63s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00010.mp4\n","output_type":"stream"},{"name":"stderr","text":" 54%|█████▍    | 165/306 [21:06<21:36,  9.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00011.mp4\n","output_type":"stream"},{"name":"stderr","text":" 54%|█████▍    | 166/306 [21:15<20:51,  8.94s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00012.mp4\n","output_type":"stream"},{"name":"stderr","text":" 55%|█████▍    | 167/306 [21:21<19:18,  8.34s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00013.mp4\n","output_type":"stream"},{"name":"stderr","text":" 55%|█████▍    | 168/306 [21:29<18:58,  8.25s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00014.mp4\n","output_type":"stream"},{"name":"stderr","text":" 55%|█████▌    | 169/306 [21:36<17:59,  7.88s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00015.mp4\n","output_type":"stream"},{"name":"stderr","text":" 56%|█████▌    | 170/306 [21:43<17:13,  7.60s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00016.mp4\n","output_type":"stream"},{"name":"stderr","text":" 56%|█████▌    | 171/306 [21:52<17:50,  7.93s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00017.mp4\n","output_type":"stream"},{"name":"stderr","text":" 56%|█████▌    | 172/306 [22:01<18:24,  8.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00018.mp4\n","output_type":"stream"},{"name":"stderr","text":" 57%|█████▋    | 173/306 [22:09<18:11,  8.21s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00019.mp4\n","output_type":"stream"},{"name":"stderr","text":" 57%|█████▋    | 174/306 [22:15<16:21,  7.44s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00020.mp4\n","output_type":"stream"},{"name":"stderr","text":" 57%|█████▋    | 175/306 [22:21<15:42,  7.19s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00021.mp4\n","output_type":"stream"},{"name":"stderr","text":" 58%|█████▊    | 176/306 [22:28<15:23,  7.10s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00022.mp4\n","output_type":"stream"},{"name":"stderr","text":" 58%|█████▊    | 177/306 [22:36<15:39,  7.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00023.mp4\n","output_type":"stream"},{"name":"stderr","text":" 58%|█████▊    | 178/306 [22:43<15:03,  7.06s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00024.mp4\n","output_type":"stream"},{"name":"stderr","text":" 58%|█████▊    | 179/306 [22:51<15:46,  7.45s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00025.mp4\n","output_type":"stream"},{"name":"stderr","text":" 59%|█████▉    | 180/306 [22:58<15:06,  7.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00026.mp4\n","output_type":"stream"},{"name":"stderr","text":" 59%|█████▉    | 181/306 [23:12<19:13,  9.23s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00027.mp4\n","output_type":"stream"},{"name":"stderr","text":" 59%|█████▉    | 182/306 [23:17<16:57,  8.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00028.mp4\n","output_type":"stream"},{"name":"stderr","text":" 60%|█████▉    | 183/306 [23:24<15:48,  7.71s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00029.mp4\n","output_type":"stream"},{"name":"stderr","text":" 60%|██████    | 184/306 [23:30<14:37,  7.19s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00030.mp4\n","output_type":"stream"},{"name":"stderr","text":" 60%|██████    | 185/306 [23:36<13:52,  6.88s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00031.mp4\n","output_type":"stream"},{"name":"stderr","text":" 61%|██████    | 186/306 [23:42<13:07,  6.56s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00032.mp4\n","output_type":"stream"},{"name":"stderr","text":" 61%|██████    | 187/306 [23:48<12:48,  6.46s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00033.mp4\n","output_type":"stream"},{"name":"stderr","text":" 61%|██████▏   | 188/306 [24:00<15:52,  8.07s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00034.mp4\n","output_type":"stream"},{"name":"stderr","text":" 62%|██████▏   | 189/306 [24:09<16:12,  8.31s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00035.mp4\n","output_type":"stream"},{"name":"stderr","text":" 62%|██████▏   | 190/306 [24:15<14:54,  7.71s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00036.mp4\n","output_type":"stream"},{"name":"stderr","text":" 62%|██████▏   | 191/306 [24:22<14:27,  7.55s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00037.mp4\n","output_type":"stream"},{"name":"stderr","text":" 63%|██████▎   | 192/306 [24:29<13:43,  7.22s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00038.mp4\n","output_type":"stream"},{"name":"stderr","text":" 63%|██████▎   | 193/306 [24:35<12:55,  6.87s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00039.mp4\n","output_type":"stream"},{"name":"stderr","text":" 63%|██████▎   | 194/306 [24:46<15:31,  8.32s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00040.mp4\n","output_type":"stream"},{"name":"stderr","text":" 64%|██████▎   | 195/306 [24:53<14:13,  7.69s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00041.mp4\n","output_type":"stream"},{"name":"stderr","text":" 64%|██████▍   | 196/306 [25:00<14:02,  7.66s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00042.mp4\n","output_type":"stream"},{"name":"stderr","text":" 64%|██████▍   | 197/306 [25:07<13:36,  7.49s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00043.mp4\n","output_type":"stream"},{"name":"stderr","text":" 65%|██████▍   | 198/306 [25:15<13:16,  7.38s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00044.mp4\n","output_type":"stream"},{"name":"stderr","text":" 65%|██████▌   | 199/306 [25:22<13:13,  7.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00045.mp4\n","output_type":"stream"},{"name":"stderr","text":" 65%|██████▌   | 200/306 [25:30<13:22,  7.57s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00046.mp4\n","output_type":"stream"},{"name":"stderr","text":" 66%|██████▌   | 201/306 [25:36<12:38,  7.22s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00047.mp4\n","output_type":"stream"},{"name":"stderr","text":" 66%|██████▌   | 202/306 [25:45<13:05,  7.56s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00048.mp4\n","output_type":"stream"},{"name":"stderr","text":" 66%|██████▋   | 203/306 [25:51<12:29,  7.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00049.mp4\n","output_type":"stream"},{"name":"stderr","text":" 67%|██████▋   | 204/306 [25:58<11:53,  6.99s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00050.mp4\n","output_type":"stream"},{"name":"stderr","text":" 67%|██████▋   | 205/306 [26:04<11:36,  6.90s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00051.mp4\n","output_type":"stream"},{"name":"stderr","text":" 67%|██████▋   | 206/306 [26:10<11:05,  6.65s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00052.mp4\n","output_type":"stream"},{"name":"stderr","text":" 68%|██████▊   | 207/306 [26:19<11:56,  7.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00053.mp4\n","output_type":"stream"},{"name":"stderr","text":" 68%|██████▊   | 208/306 [26:25<11:22,  6.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00054.mp4\n","output_type":"stream"},{"name":"stderr","text":" 68%|██████▊   | 209/306 [26:33<11:41,  7.23s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00055.mp4\n","output_type":"stream"},{"name":"stderr","text":" 69%|██████▊   | 210/306 [26:40<11:07,  6.96s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00056.mp4\n","output_type":"stream"},{"name":"stderr","text":" 69%|██████▉   | 211/306 [26:46<10:49,  6.83s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00057.mp4\n","output_type":"stream"},{"name":"stderr","text":" 69%|██████▉   | 212/306 [26:52<10:08,  6.47s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00058.mp4\n","output_type":"stream"},{"name":"stderr","text":" 70%|██████▉   | 213/306 [26:58<10:00,  6.46s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00059.mp4\n","output_type":"stream"},{"name":"stderr","text":" 70%|██████▉   | 214/306 [27:05<09:57,  6.50s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00060.mp4\n","output_type":"stream"},{"name":"stderr","text":" 70%|███████   | 215/306 [27:11<09:44,  6.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00061.mp4\n","output_type":"stream"},{"name":"stderr","text":" 71%|███████   | 216/306 [27:19<10:10,  6.78s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00062.mp4\n","output_type":"stream"},{"name":"stderr","text":" 71%|███████   | 217/306 [27:25<09:49,  6.63s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00063.mp4\n","output_type":"stream"},{"name":"stderr","text":" 71%|███████   | 218/306 [27:32<09:54,  6.75s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00064.mp4\n","output_type":"stream"},{"name":"stderr","text":" 72%|███████▏  | 219/306 [27:39<09:56,  6.85s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00065.mp4\n","output_type":"stream"},{"name":"stderr","text":" 72%|███████▏  | 220/306 [27:45<09:31,  6.65s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00066.mp4\n","output_type":"stream"},{"name":"stderr","text":" 72%|███████▏  | 221/306 [27:52<09:21,  6.60s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00067.mp4\n","output_type":"stream"},{"name":"stderr","text":" 73%|███████▎  | 222/306 [27:58<09:02,  6.45s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00068.mp4\n","output_type":"stream"},{"name":"stderr","text":" 73%|███████▎  | 223/306 [28:04<09:01,  6.52s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00069.mp4\n","output_type":"stream"},{"name":"stderr","text":" 73%|███████▎  | 224/306 [28:12<09:15,  6.78s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00070.mp4\n","output_type":"stream"},{"name":"stderr","text":" 74%|███████▎  | 225/306 [28:24<11:10,  8.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00071.mp4\n","output_type":"stream"},{"name":"stderr","text":" 74%|███████▍  | 226/306 [28:36<12:37,  9.47s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00072.mp4\n","output_type":"stream"},{"name":"stderr","text":" 74%|███████▍  | 227/306 [28:44<11:59,  9.11s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00073.mp4\n","output_type":"stream"},{"name":"stderr","text":" 75%|███████▍  | 228/306 [28:52<11:33,  8.90s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00074.mp4\n","output_type":"stream"},{"name":"stderr","text":" 75%|███████▍  | 229/306 [28:59<10:34,  8.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00075.mp4\n","output_type":"stream"},{"name":"stderr","text":" 75%|███████▌  | 230/306 [29:09<10:53,  8.60s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00076.mp4\n","output_type":"stream"},{"name":"stderr","text":" 75%|███████▌  | 231/306 [29:16<10:22,  8.30s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00077.mp4\n","output_type":"stream"},{"name":"stderr","text":" 76%|███████▌  | 232/306 [29:24<10:09,  8.24s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00078.mp4\n","output_type":"stream"},{"name":"stderr","text":" 76%|███████▌  | 233/306 [29:45<14:43, 12.10s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00079.mp4\n","output_type":"stream"},{"name":"stderr","text":" 76%|███████▋  | 234/306 [29:54<13:05, 10.91s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00080.mp4\n","output_type":"stream"},{"name":"stderr","text":" 77%|███████▋  | 235/306 [30:00<11:24,  9.64s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00081.mp4\n","output_type":"stream"},{"name":"stderr","text":" 77%|███████▋  | 236/306 [30:06<09:54,  8.49s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00082.mp4\n","output_type":"stream"},{"name":"stderr","text":" 77%|███████▋  | 237/306 [30:15<09:51,  8.58s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00083.mp4\n","output_type":"stream"},{"name":"stderr","text":" 78%|███████▊  | 238/306 [30:23<09:30,  8.39s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00084.mp4\n","output_type":"stream"},{"name":"stderr","text":" 78%|███████▊  | 239/306 [30:40<12:23, 11.09s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00085.mp4\n","output_type":"stream"},{"name":"stderr","text":" 78%|███████▊  | 240/306 [30:55<13:21, 12.15s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00086.mp4\n","output_type":"stream"},{"name":"stderr","text":" 79%|███████▉  | 241/306 [31:06<12:59, 11.99s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00087.mp4\n","output_type":"stream"},{"name":"stderr","text":" 79%|███████▉  | 242/306 [31:14<11:20, 10.64s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00088.mp4\n","output_type":"stream"},{"name":"stderr","text":" 79%|███████▉  | 243/306 [31:23<10:42, 10.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00089.mp4\n","output_type":"stream"},{"name":"stderr","text":" 80%|███████▉  | 244/306 [31:30<09:25,  9.12s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00090.mp4\n","output_type":"stream"},{"name":"stderr","text":" 80%|████████  | 245/306 [31:36<08:17,  8.16s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00091.mp4\n","output_type":"stream"},{"name":"stderr","text":" 80%|████████  | 246/306 [31:44<08:07,  8.12s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00092.mp4\n","output_type":"stream"},{"name":"stderr","text":" 81%|████████  | 247/306 [31:49<07:15,  7.38s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00093.mp4\n","output_type":"stream"},{"name":"stderr","text":" 81%|████████  | 248/306 [31:56<06:55,  7.16s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00094.mp4\n","output_type":"stream"},{"name":"stderr","text":" 81%|████████▏ | 249/306 [32:04<07:09,  7.54s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00095.mp4\n","output_type":"stream"},{"name":"stderr","text":" 82%|████████▏ | 250/306 [32:21<09:43, 10.42s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00096.mp4\n","output_type":"stream"},{"name":"stderr","text":" 82%|████████▏ | 251/306 [32:28<08:27,  9.22s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00097.mp4\n","output_type":"stream"},{"name":"stderr","text":" 82%|████████▏ | 252/306 [32:38<08:26,  9.38s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00098.mp4\n","output_type":"stream"},{"name":"stderr","text":" 83%|████████▎ | 253/306 [32:45<07:39,  8.66s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00099.mp4\n","output_type":"stream"},{"name":"stderr","text":" 83%|████████▎ | 254/306 [32:51<06:47,  7.84s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00100.mp4\n","output_type":"stream"},{"name":"stderr","text":" 83%|████████▎ | 255/306 [32:58<06:36,  7.78s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00101.mp4\n","output_type":"stream"},{"name":"stderr","text":" 84%|████████▎ | 256/306 [33:07<06:47,  8.15s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00102.mp4\n","output_type":"stream"},{"name":"stderr","text":" 84%|████████▍ | 257/306 [33:15<06:36,  8.09s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00103.mp4\n","output_type":"stream"},{"name":"stderr","text":" 84%|████████▍ | 258/306 [33:21<06:02,  7.55s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00104.mp4\n","output_type":"stream"},{"name":"stderr","text":" 85%|████████▍ | 259/306 [33:28<05:37,  7.18s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00105.mp4\n","output_type":"stream"},{"name":"stderr","text":" 85%|████████▍ | 260/306 [33:34<05:18,  6.92s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00106.mp4\n","output_type":"stream"},{"name":"stderr","text":" 85%|████████▌ | 261/306 [33:41<05:08,  6.85s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00107.mp4\n","output_type":"stream"},{"name":"stderr","text":" 86%|████████▌ | 262/306 [33:47<04:55,  6.71s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00108.mp4\n","output_type":"stream"},{"name":"stderr","text":" 86%|████████▌ | 263/306 [33:56<05:20,  7.45s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00109.mp4\n","output_type":"stream"},{"name":"stderr","text":" 86%|████████▋ | 264/306 [34:07<05:54,  8.45s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00110.mp4\n","output_type":"stream"},{"name":"stderr","text":" 87%|████████▋ | 265/306 [34:14<05:22,  7.87s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00111.mp4\n","output_type":"stream"},{"name":"stderr","text":" 87%|████████▋ | 266/306 [34:21<05:03,  7.58s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00112.mp4\n","output_type":"stream"},{"name":"stderr","text":" 87%|████████▋ | 267/306 [34:27<04:40,  7.19s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00113.mp4\n","output_type":"stream"},{"name":"stderr","text":" 88%|████████▊ | 268/306 [34:33<04:16,  6.75s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00114.mp4\n","output_type":"stream"},{"name":"stderr","text":" 88%|████████▊ | 269/306 [34:40<04:14,  6.87s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00115.mp4\n","output_type":"stream"},{"name":"stderr","text":" 88%|████████▊ | 270/306 [34:48<04:19,  7.22s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00116.mp4\n","output_type":"stream"},{"name":"stderr","text":" 89%|████████▊ | 271/306 [34:54<04:06,  7.05s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00117.mp4\n","output_type":"stream"},{"name":"stderr","text":" 89%|████████▉ | 272/306 [35:02<04:05,  7.23s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00118.mp4\n","output_type":"stream"},{"name":"stderr","text":" 89%|████████▉ | 273/306 [35:12<04:22,  7.96s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00119.mp4\n","output_type":"stream"},{"name":"stderr","text":" 90%|████████▉ | 274/306 [35:19<04:11,  7.87s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00120.mp4\n","output_type":"stream"},{"name":"stderr","text":" 90%|████████▉ | 275/306 [35:28<04:07,  7.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00121.mp4\n","output_type":"stream"},{"name":"stderr","text":" 90%|█████████ | 276/306 [35:35<03:52,  7.76s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00122.mp4\n","output_type":"stream"},{"name":"stderr","text":" 91%|█████████ | 277/306 [35:42<03:42,  7.69s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00123.mp4\n","output_type":"stream"},{"name":"stderr","text":" 91%|█████████ | 278/306 [35:50<03:30,  7.53s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00124.mp4\n","output_type":"stream"},{"name":"stderr","text":" 91%|█████████ | 279/306 [36:09<05:02, 11.21s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00125.mp4\n","output_type":"stream"},{"name":"stderr","text":" 92%|█████████▏| 280/306 [36:18<04:30, 10.39s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00126.mp4\n","output_type":"stream"},{"name":"stderr","text":" 92%|█████████▏| 281/306 [36:26<04:04,  9.78s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00127.mp4\n","output_type":"stream"},{"name":"stderr","text":" 92%|█████████▏| 282/306 [36:35<03:44,  9.35s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00128.mp4\n","output_type":"stream"},{"name":"stderr","text":" 92%|█████████▏| 283/306 [36:42<03:19,  8.68s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00129.mp4\n","output_type":"stream"},{"name":"stderr","text":" 93%|█████████▎| 284/306 [36:49<03:01,  8.26s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00130.mp4\n","output_type":"stream"},{"name":"stderr","text":" 93%|█████████▎| 285/306 [36:56<02:47,  7.97s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00131.mp4\n","output_type":"stream"},{"name":"stderr","text":" 93%|█████████▎| 286/306 [37:04<02:40,  8.04s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00132.mp4\n","output_type":"stream"},{"name":"stderr","text":" 94%|█████████▍| 287/306 [37:13<02:37,  8.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00133.mp4\n","output_type":"stream"},{"name":"stderr","text":" 94%|█████████▍| 288/306 [37:23<02:38,  8.79s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00134.mp4\n","output_type":"stream"},{"name":"stderr","text":" 94%|█████████▍| 289/306 [37:30<02:21,  8.33s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00135.mp4\n","output_type":"stream"},{"name":"stderr","text":" 95%|█████████▍| 290/306 [37:40<02:16,  8.54s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00136.mp4\n","output_type":"stream"},{"name":"stderr","text":" 95%|█████████▌| 291/306 [37:45<01:56,  7.75s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00137.mp4\n","output_type":"stream"},{"name":"stderr","text":" 95%|█████████▌| 292/306 [37:52<01:43,  7.39s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00138.mp4\n","output_type":"stream"},{"name":"stderr","text":" 96%|█████████▌| 293/306 [37:59<01:33,  7.16s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00139.mp4\n","output_type":"stream"},{"name":"stderr","text":" 96%|█████████▌| 294/306 [38:09<01:38,  8.20s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00140.mp4\n","output_type":"stream"},{"name":"stderr","text":" 96%|█████████▋| 295/306 [38:16<01:26,  7.88s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00141.mp4\n","output_type":"stream"},{"name":"stderr","text":" 97%|█████████▋| 296/306 [38:26<01:22,  8.26s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00142.mp4\n","output_type":"stream"},{"name":"stderr","text":" 97%|█████████▋| 297/306 [38:31<01:07,  7.52s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00143.mp4\n","output_type":"stream"},{"name":"stderr","text":" 97%|█████████▋| 298/306 [39:38<03:22, 25.28s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00144.mp4\n","output_type":"stream"},{"name":"stderr","text":" 98%|█████████▊| 299/306 [39:45<02:18, 19.80s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00145.mp4\n","output_type":"stream"},{"name":"stderr","text":" 98%|█████████▊| 300/306 [39:52<01:34, 15.82s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00146.mp4\n","output_type":"stream"},{"name":"stderr","text":" 98%|█████████▊| 301/306 [39:57<01:03, 12.70s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00147.mp4\n","output_type":"stream"},{"name":"stderr","text":" 99%|█████████▊| 302/306 [40:04<00:43, 10.86s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00148.mp4\n","output_type":"stream"},{"name":"stderr","text":" 99%|█████████▉| 303/306 [40:10<00:28,  9.55s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00149.mp4\n","output_type":"stream"},{"name":"stderr","text":" 99%|█████████▉| 304/306 [40:16<00:17,  8.59s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00150.mp4\n","output_type":"stream"},{"name":"stderr","text":"100%|█████████▉| 305/306 [40:25<00:08,  8.47s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00151.mp4\n","output_type":"stream"},{"name":"stderr","text":"100%|██████████| 306/306 [40:31<00:00,  7.94s/it]","output_type":"stream"},{"name":"stdout","text":"Saved: /kaggle/working/output_videos/00152.mp4\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"}],"execution_count":9},{"cell_type":"code","source":"df_labels = pd.DataFrame(label_entries, columns=['video_name', 'label'])\ndf_labels.to_csv(label_file_path, index=False)","metadata":{"id":"wuCEzQ9y39nq","executionInfo":{"status":"ok","timestamp":1747850426870,"user_tz":-330,"elapsed":45,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.345954Z","iopub.execute_input":"2025-05-22T10:50:25.346468Z","iopub.status.idle":"2025-05-22T10:50:25.353525Z","shell.execute_reply.started":"2025-05-22T10:50:25.346447Z","shell.execute_reply":"2025-05-22T10:50:25.352840Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"df_labels = df_labels.drop_duplicates()\ndf_labels = df_labels.reset_index(drop=True)\n","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"xC-ySCH14CDc","executionInfo":{"status":"ok","timestamp":1747850427018,"user_tz":-330,"elapsed":146,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"12de7c0e-c37f-4843-c3ca-d634f06af48b","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.354183Z","iopub.execute_input":"2025-05-22T10:50:25.354423Z","iopub.status.idle":"2025-05-22T10:50:25.370579Z","shell.execute_reply.started":"2025-05-22T10:50:25.354396Z","shell.execute_reply":"2025-05-22T10:50:25.369866Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"X=df_labels['video_name']\ny=df_labels['label']","metadata":{"id":"VQZnZ0H74IEY","executionInfo":{"status":"ok","timestamp":1747850427038,"user_tz":-330,"elapsed":18,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.371631Z","iopub.execute_input":"2025-05-22T10:50:25.371800Z","iopub.status.idle":"2025-05-22T10:50:25.383692Z","shell.execute_reply.started":"2025-05-22T10:50:25.371787Z","shell.execute_reply":"2025-05-22T10:50:25.383052Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"czbQ_6oz4Kev","executionInfo":{"status":"error","timestamp":1747850430414,"user_tz":-330,"elapsed":3375,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"outputId":"d5762cd6-4c32-4d5f-b975-06d38f8decaa","trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.384539Z","iopub.execute_input":"2025-05-22T10:50:25.385026Z","iopub.status.idle":"2025-05-22T10:50:25.862577Z","shell.execute_reply.started":"2025-05-22T10:50:25.385000Z","shell.execute_reply":"2025-05-22T10:50:25.862016Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"X_train = X_train.reset_index(drop=True)\nX_test = X_test.reset_index(drop=True)","metadata":{"id":"dEb9ECX-4Nm3","executionInfo":{"status":"aborted","timestamp":1747850430419,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.863228Z","iopub.execute_input":"2025-05-22T10:50:25.863572Z","iopub.status.idle":"2025-05-22T10:50:25.867888Z","shell.execute_reply.started":"2025-05-22T10:50:25.863553Z","shell.execute_reply":"2025-05-22T10:50:25.867350Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"X_train","metadata":{"id":"cWxZI3NL4Q1p","executionInfo":{"status":"aborted","timestamp":1747850430420,"user_tz":-330,"elapsed":24,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.868522Z","iopub.execute_input":"2025-05-22T10:50:25.868712Z","iopub.status.idle":"2025-05-22T10:50:25.886969Z","shell.execute_reply.started":"2025-05-22T10:50:25.868696Z","shell.execute_reply":"2025-05-22T10:50:25.886265Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"0              00060\n1              00091\n2       id0_id2_0004\n3              00026\n4      id0_id26_0008\n           ...      \n239            00035\n240     id0_id2_0000\n241     id0_id9_0001\n242            00117\n243     id0_id6_0006\nName: video_name, Length: 244, dtype: object"},"metadata":{}}],"execution_count":15},{"cell_type":"code","source":"from torchvision import transforms\nim_size = 224\nmean = [0.485, 0.456, 0.406]\nstd = [0.229, 0.224, 0.225]\n\ntrain_transform = transforms.Compose([\n    transforms.ToPILImage(),\n    transforms.Resize((im_size, im_size)),\n    transforms.RandomHorizontalFlip(),\n    transforms.ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1),\n    transforms.ToTensor(),\n    transforms.Normalize(mean, std)\n])\n\ntest_transform = transforms.Compose([\n    transforms.ToPILImage(),\n    transforms.Resize((im_size, im_size)),\n    transforms.ToTensor(),\n    transforms.Normalize(mean, std)\n])\n","metadata":{"id":"H6j6zoh14UCI","executionInfo":{"status":"aborted","timestamp":1747850430420,"user_tz":-330,"elapsed":22,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:11:34.990924Z","iopub.execute_input":"2025-05-22T11:11:34.991568Z","iopub.status.idle":"2025-05-22T11:11:34.996863Z","shell.execute_reply.started":"2025-05-22T11:11:34.991544Z","shell.execute_reply":"2025-05-22T11:11:34.995999Z"}},"outputs":[],"execution_count":29},{"cell_type":"code","source":"video_label_dict = dict(zip(df_labels['video_name'], df_labels['label']))","metadata":{"id":"qZi__zb34ZSW","executionInfo":{"status":"aborted","timestamp":1747850430426,"user_tz":-330,"elapsed":16,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.887673Z","iopub.execute_input":"2025-05-22T10:50:25.887879Z","iopub.status.idle":"2025-05-22T10:50:25.899661Z","shell.execute_reply.started":"2025-05-22T10:50:25.887864Z","shell.execute_reply":"2025-05-22T10:50:25.898940Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"video_label_dict","metadata":{"id":"Z5-o-sS14bgD","executionInfo":{"status":"aborted","timestamp":1747850430427,"user_tz":-330,"elapsed":16,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T10:50:25.900447Z","iopub.execute_input":"2025-05-22T10:50:25.900664Z","iopub.status.idle":"2025-05-22T10:50:25.916952Z","shell.execute_reply.started":"2025-05-22T10:50:25.900643Z","shell.execute_reply":"2025-05-22T10:50:25.916407Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"{'id0_id16_0000': 1,\n 'id0_id16_0001': 1,\n 'id0_id16_0002': 1,\n 'id0_id16_0003': 1,\n 'id0_id16_0004': 1,\n 'id0_id16_0005': 1,\n 'id0_id16_0006': 1,\n 'id0_id16_0007': 1,\n 'id0_id16_0008': 1,\n 'id0_id16_0009': 1,\n 'id0_id17_0000': 1,\n 'id0_id17_0001': 1,\n 'id0_id17_0002': 1,\n 'id0_id17_0003': 1,\n 'id0_id17_0005': 1,\n 'id0_id17_0006': 1,\n 'id0_id17_0007': 1,\n 'id0_id17_0009': 1,\n 'id0_id1_0000': 1,\n 'id0_id1_0001': 1,\n 'id0_id1_0002': 1,\n 'id0_id1_0003': 1,\n 'id0_id1_0005': 1,\n 'id0_id1_0006': 1,\n 'id0_id1_0007': 1,\n 'id0_id1_0009': 1,\n 'id0_id20_0000': 1,\n 'id0_id20_0001': 1,\n 'id0_id20_0002': 1,\n 'id0_id20_0003': 1,\n 'id0_id20_0004': 1,\n 'id0_id20_0005': 1,\n 'id0_id20_0006': 1,\n 'id0_id20_0007': 1,\n 'id0_id20_0009': 1,\n 'id0_id21_0000': 1,\n 'id0_id21_0001': 1,\n 'id0_id21_0002': 1,\n 'id0_id21_0003': 1,\n 'id0_id21_0004': 1,\n 'id0_id21_0005': 1,\n 'id0_id21_0006': 1,\n 'id0_id21_0007': 1,\n 'id0_id21_0009': 1,\n 'id0_id23_0000': 1,\n 'id0_id23_0001': 1,\n 'id0_id23_0002': 1,\n 'id0_id23_0004': 1,\n 'id0_id23_0005': 1,\n 'id0_id23_0007': 1,\n 'id0_id23_0009': 1,\n 'id0_id26_0000': 1,\n 'id0_id26_0001': 1,\n 'id0_id26_0002': 1,\n 'id0_id26_0003': 1,\n 'id0_id26_0004': 1,\n 'id0_id26_0005': 1,\n 'id0_id26_0006': 1,\n 'id0_id26_0007': 1,\n 'id0_id26_0008': 1,\n 'id0_id26_0009': 1,\n 'id0_id28_0000': 1,\n 'id0_id28_0001': 1,\n 'id0_id28_0002': 1,\n 'id0_id28_0003': 1,\n 'id0_id28_0004': 1,\n 'id0_id28_0005': 1,\n 'id0_id28_0006': 1,\n 'id0_id28_0007': 1,\n 'id0_id28_0008': 1,\n 'id0_id28_0009': 1,\n 'id0_id2_0000': 1,\n 'id0_id2_0001': 1,\n 'id0_id2_0002': 1,\n 'id0_id2_0003': 1,\n 'id0_id2_0004': 1,\n 'id0_id2_0005': 1,\n 'id0_id2_0006': 1,\n 'id0_id2_0007': 1,\n 'id0_id2_0008': 1,\n 'id0_id2_0009': 1,\n 'id0_id3_0000': 1,\n 'id0_id3_0001': 1,\n 'id0_id3_0002': 1,\n 'id0_id3_0003': 1,\n 'id0_id3_0004': 1,\n 'id0_id3_0005': 1,\n 'id0_id3_0006': 1,\n 'id0_id3_0007': 1,\n 'id0_id3_0008': 1,\n 'id0_id3_0009': 1,\n 'id0_id4_0000': 1,\n 'id0_id4_0001': 1,\n 'id0_id4_0002': 1,\n 'id0_id4_0003': 1,\n 'id0_id4_0004': 1,\n 'id0_id4_0005': 1,\n 'id0_id4_0006': 1,\n 'id0_id4_0009': 1,\n 'id0_id6_0000': 1,\n 'id0_id6_0001': 1,\n 'id0_id6_0002': 1,\n 'id0_id6_0006': 1,\n 'id0_id6_0007': 1,\n 'id0_id6_0009': 1,\n 'id0_id9_0000': 1,\n 'id0_id9_0001': 1,\n 'id0_id9_0002': 1,\n 'id0_id9_0003': 1,\n 'id0_id9_0005': 1,\n 'id0_id9_0006': 1,\n 'id0_id9_0007': 1,\n 'id0_id9_0008': 1,\n 'id0_id9_0009': 1,\n 'id1_id0_0000': 1,\n 'id1_id0_0001': 1,\n 'id1_id0_0002': 1,\n 'id1_id0_0003': 1,\n 'id1_id0_0004': 1,\n 'id1_id0_0005': 1,\n 'id1_id0_0006': 1,\n 'id1_id0_0007': 1,\n 'id1_id0_0009': 1,\n 'id1_id2_0000': 1,\n 'id1_id2_0001': 1,\n 'id1_id2_0002': 1,\n 'id1_id2_0003': 1,\n 'id1_id2_0004': 1,\n 'id1_id2_0005': 1,\n 'id1_id2_0006': 1,\n 'id1_id2_0007': 1,\n 'id1_id2_0009': 1,\n 'id1_id3_0000': 1,\n 'id1_id3_0001': 1,\n 'id1_id3_0002': 1,\n 'id1_id3_0003': 1,\n 'id1_id3_0004': 1,\n 'id1_id3_0005': 1,\n 'id1_id3_0006': 1,\n 'id1_id3_0007': 1,\n 'id1_id3_0009': 1,\n 'id1_id4_0000': 1,\n 'id1_id4_0001': 1,\n 'id1_id4_0002': 1,\n 'id1_id4_0003': 1,\n 'id1_id4_0004': 1,\n 'id1_id4_0005': 1,\n 'id1_id4_0006': 1,\n 'id1_id4_0007': 1,\n 'id1_id4_0009': 1,\n 'id1_id6_0000': 1,\n 'id1_id6_0001': 1,\n 'id1_id6_0002': 1,\n '00000': 0,\n '00001': 0,\n '00002': 0,\n '00003': 0,\n '00004': 0,\n '00005': 0,\n '00006': 0,\n '00007': 0,\n '00008': 0,\n '00009': 0,\n '00010': 0,\n '00011': 0,\n '00012': 0,\n '00013': 0,\n '00014': 0,\n '00015': 0,\n '00016': 0,\n '00017': 0,\n '00018': 0,\n '00019': 0,\n '00020': 0,\n '00021': 0,\n '00022': 0,\n '00023': 0,\n '00024': 0,\n '00025': 0,\n '00026': 0,\n '00027': 0,\n '00028': 0,\n '00029': 0,\n '00030': 0,\n '00031': 0,\n '00032': 0,\n '00033': 0,\n '00034': 0,\n '00035': 0,\n '00036': 0,\n '00037': 0,\n '00038': 0,\n '00039': 0,\n '00040': 0,\n '00041': 0,\n '00042': 0,\n '00043': 0,\n '00044': 0,\n '00045': 0,\n '00046': 0,\n '00047': 0,\n '00048': 0,\n '00049': 0,\n '00050': 0,\n '00051': 0,\n '00052': 0,\n '00053': 0,\n '00054': 0,\n '00055': 0,\n '00056': 0,\n '00057': 0,\n '00058': 0,\n '00059': 0,\n '00060': 0,\n '00061': 0,\n '00062': 0,\n '00063': 0,\n '00064': 0,\n '00065': 0,\n '00066': 0,\n '00067': 0,\n '00068': 0,\n '00069': 0,\n '00070': 0,\n '00071': 0,\n '00072': 0,\n '00073': 0,\n '00074': 0,\n '00075': 0,\n '00076': 0,\n '00077': 0,\n '00078': 0,\n '00079': 0,\n '00080': 0,\n '00081': 0,\n '00082': 0,\n '00083': 0,\n '00084': 0,\n '00085': 0,\n '00086': 0,\n '00087': 0,\n '00088': 0,\n '00089': 0,\n '00090': 0,\n '00091': 0,\n '00092': 0,\n '00093': 0,\n '00094': 0,\n '00095': 0,\n '00096': 0,\n '00097': 0,\n '00098': 0,\n '00099': 0,\n '00100': 0,\n '00101': 0,\n '00102': 0,\n '00103': 0,\n '00104': 0,\n '00105': 0,\n '00106': 0,\n '00107': 0,\n '00108': 0,\n '00109': 0,\n '00110': 0,\n '00111': 0,\n '00112': 0,\n '00113': 0,\n '00114': 0,\n '00115': 0,\n '00116': 0,\n '00117': 0,\n '00118': 0,\n '00119': 0,\n '00120': 0,\n '00121': 0,\n '00122': 0,\n '00123': 0,\n '00124': 0,\n '00125': 0,\n '00126': 0,\n '00127': 0,\n '00128': 0,\n '00129': 0,\n '00130': 0,\n '00131': 0,\n '00132': 0,\n '00133': 0,\n '00134': 0,\n '00135': 0,\n '00136': 0,\n '00137': 0,\n '00138': 0,\n '00139': 0,\n '00140': 0,\n '00141': 0,\n '00142': 0,\n '00143': 0,\n '00144': 0,\n '00145': 0,\n '00146': 0,\n '00147': 0,\n '00148': 0,\n '00149': 0,\n '00150': 0,\n '00151': 0,\n '00152': 0}"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"import torch\nfrom torch.utils.data import Dataset\nimport cv2\nimport os\nimport numpy as np\nfrom torchvision import transforms\n\nclass VideoDataSet(Dataset):\n    def __init__(self, video_paths, label_dict, sequence_length=150, transform=None):\n        self.video_paths = video_paths\n        self.label_dict = label_dict\n        self.seq_length = sequence_length\n        self.transform = transform\n\n    def __len__(self):\n        return len(self.video_paths)\n\n    def __getitem__(self, index):\n        path = self.video_paths[index]\n        video_name = os.path.splitext(os.path.basename(path))[0]\n        label = self.label_dict.get(video_name, -1)\n\n        frames = self.extract_frames(path)\n\n        if len(frames) == 0:\n            dummy = torch.zeros((3, 224, 224))\n            frames = [dummy] * self.seq_length\n\n        video_tensor = torch.stack(frames)  # Shape: [seq_len, 3, 224, 224]\n        return video_tensor, label\n\n    def extract_frames(self, path):\n        cap = cv2.VideoCapture(path)\n        total_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))\n\n        # Uniform sampling indices\n        indices = np.linspace(0, max(1, total_frames - 1), self.seq_length).astype(int)\n\n        frames = []\n        for i in indices:\n            cap.set(cv2.CAP_PROP_POS_FRAMES, i)\n            success, frame = cap.read()\n            if not success:\n                break\n\n            # Convert BGR to RGB\n            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n\n            # Apply transform\n            if self.transform:\n                frame = self.transform(frame)\n            else:\n                # Default transformation if none provided\n                frame = torch.from_numpy(cv2.resize(frame, (224, 224))).permute(2, 0, 1).float() / 255.0\n\n            frames.append(frame)\n\n        cap.release()\n\n        # Pad if fewer frames\n        while len(frames) < self.seq_length:\n            frames.append(torch.zeros((3, 224, 224)))\n\n        return frames\n","metadata":{"id":"VTPQN6xa4f5G","executionInfo":{"status":"aborted","timestamp":1747850430428,"user_tz":-330,"elapsed":179550,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:13:12.757163Z","iopub.execute_input":"2025-05-22T11:13:12.757737Z","iopub.status.idle":"2025-05-22T11:13:12.765855Z","shell.execute_reply.started":"2025-05-22T11:13:12.757711Z","shell.execute_reply":"2025-05-22T11:13:12.765289Z"}},"outputs":[],"execution_count":31},{"cell_type":"code","source":"X_train_dataset=VideoDataSet(X_train,video_label_dict,sequence_length=150,transform=train_transform)\nX_test_dataset=VideoDataSet(X_test,video_label_dict,sequence_length=150,transform=test_transform)","metadata":{"id":"HgUIWp5Y4q1A","executionInfo":{"status":"aborted","timestamp":1747850430429,"user_tz":-330,"elapsed":179550,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:13:16.732922Z","iopub.execute_input":"2025-05-22T11:13:16.733508Z","iopub.status.idle":"2025-05-22T11:13:16.737106Z","shell.execute_reply.started":"2025-05-22T11:13:16.733480Z","shell.execute_reply":"2025-05-22T11:13:16.736310Z"}},"outputs":[],"execution_count":32},{"cell_type":"code","source":"from torch.utils.data import DataLoader\ny_train_dataset=DataLoader(X_train_dataset,batch_size=4,shuffle=True)\ny_test_dataset=DataLoader(X_test_dataset,batch_size=4,shuffle=True)","metadata":{"id":"mxV6WIzF4ryk","executionInfo":{"status":"aborted","timestamp":1747850430430,"user_tz":-330,"elapsed":179550,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:13:20.632519Z","iopub.execute_input":"2025-05-22T11:13:20.632999Z","iopub.status.idle":"2025-05-22T11:13:20.636924Z","shell.execute_reply.started":"2025-05-22T11:13:20.632976Z","shell.execute_reply":"2025-05-22T11:13:20.636186Z"}},"outputs":[],"execution_count":33},{"cell_type":"code","source":"from torch.utils.data import DataLoader\n\ntrain_loader = DataLoader(X_train_dataset, batch_size=4, shuffle=True)\n\nfor videos, labels in train_loader:\n    print(\"Batch video tensor shape:\", videos.shape)\n    print(\"Batch labels:\", labels)\n","metadata":{"id":"zOTKOq0A4u3o","executionInfo":{"status":"aborted","timestamp":1747850430433,"user_tz":-330,"elapsed":179552,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:13:26.426472Z","iopub.execute_input":"2025-05-22T11:13:26.426756Z","iopub.status.idle":"2025-05-22T11:13:49.926266Z","shell.execute_reply.started":"2025-05-22T11:13:26.426733Z","shell.execute_reply":"2025-05-22T11:13:49.925619Z"}},"outputs":[{"name":"stdout","text":"Batch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 1])\n","output_type":"stream"}],"execution_count":34},{"cell_type":"code","source":"test_loader=DataLoader(X_test_dataset,batch_size=4,shuffle=True)\nfor videos, labels in test_loader:\n    print(\"Batch video tensor shape:\", videos.shape)\n    print(\"Batch labels:\", labels)","metadata":{"id":"vHNWnMLx40F6","executionInfo":{"status":"aborted","timestamp":1747850430434,"user_tz":-330,"elapsed":179552,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:16:00.604069Z","iopub.execute_input":"2025-05-22T11:16:00.604645Z","iopub.status.idle":"2025-05-22T11:16:06.906696Z","shell.execute_reply.started":"2025-05-22T11:16:00.604622Z","shell.execute_reply":"2025-05-22T11:16:06.906106Z"}},"outputs":[{"name":"stdout","text":"Batch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 0, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 0, 0, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 0])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([1, 1, 1, 1])\nBatch video tensor shape: torch.Size([4, 150, 3, 224, 224])\nBatch labels: tensor([0, 1, 0, 1])\nBatch video tensor shape: torch.Size([2, 150, 3, 224, 224])\nBatch labels: tensor([1, 0])\n","output_type":"stream"}],"execution_count":35},{"cell_type":"code","source":"import torch\nimport torchvision.models as models\nimport torch.nn as nn\n\n# Load pretrained ResNeXt\nresnext = models.resnext50_32x4d(pretrained=True)\n\n# Remove final classification layer (we want 2048-dim features)\nresnext.fc = nn.Identity()\n\n# Set to eval mode\nresnext.eval()\nresnext.cuda()  # Or move to your device\n","metadata":{"id":"e5UBnTyr43si","executionInfo":{"status":"aborted","timestamp":1747850430435,"user_tz":-330,"elapsed":179551,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:16:10.454046Z","iopub.execute_input":"2025-05-22T11:16:10.454638Z","iopub.status.idle":"2025-05-22T11:16:10.897020Z","shell.execute_reply.started":"2025-05-22T11:16:10.454612Z","shell.execute_reply":"2025-05-22T11:16:10.896421Z"}},"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"ResNet(\n  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (relu): ReLU(inplace=True)\n  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n  (layer1): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer2): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (3): Bottleneck(\n      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer3): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (3): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (4): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (5): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer4): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n  (fc): Identity()\n)"},"metadata":{}}],"execution_count":36},{"cell_type":"code","source":"import torch\nfrom torch import nn\n\nclass LSTMModel(nn.Module):\n    def __init__(self, num_classes=1, latent_dim=2048, lstm_layers=1, hidden_dim=128, bidirectional=False, dropout=0.4):\n        super(LSTMModel, self).__init__()\n        \n        self.lstm = nn.LSTM(\n            input_size=latent_dim,\n            hidden_size=hidden_dim,\n            num_layers=lstm_layers,\n            batch_first=True,\n            bidirectional=bidirectional\n        )\n        \n        self.dropout = nn.Dropout(dropout)\n        \n        lstm_output_dim = hidden_dim * 2 if bidirectional else hidden_dim\n        \n        self.linear1 = nn.Linear(lstm_output_dim, num_classes)\n        self.sigmoid = nn.Sigmoid()\n        self.relu = nn.LeakyReLU()\n        \n    def forward(self, x):\n        # x shape: [batch_size, seq_length, latent_dim]\n        \n        # LSTM expects input [batch, seq, features]\n        lstm_out, _ = self.lstm(x)  # [B, T, hidden_dim * directions]\n        \n        # Mean pool across the sequence dimension\n        pooled = torch.mean(lstm_out, dim=1)  # [B, hidden_dim * directions]\n        \n        x = self.dropout(pooled)\n        x = self.linear1(x)    # [B, num_classes]\n        \n        if self.linear1.out_features == 1:\n            # Binary classification: apply sigmoid\n            x = self.sigmoid(x).squeeze(1)  # [B]\n        else:\n            # Multi-class classification: maybe softmax outside\n            pass\n        \n        return x\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:16:16.269191Z","iopub.execute_input":"2025-05-22T11:16:16.269827Z","iopub.status.idle":"2025-05-22T11:16:16.276104Z","shell.execute_reply.started":"2025-05-22T11:16:16.269802Z","shell.execute_reply":"2025-05-22T11:16:16.275147Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"@torch.no_grad()\ndef extract_resnext_features_batch(batch_videos, model, device='cuda'):\n    \"\"\"\n    Args:\n        batch_videos: Tensor [B, T, 3, 224, 224] (on CPU or GPU)\n        model: ResNeXt model with fc=Identity(), already on device\n        device: 'cuda' or 'cpu'\n\n    Returns:\n        features: Tensor [B, T, 2048] on the SAME device (GPU preferred)\n    \"\"\"\n    model.eval()\n    batch_videos = batch_videos.to(device)  # Move input to device (GPU)\n    B, T, C, H, W = batch_videos.shape\n\n    flat_videos = batch_videos.view(B * T, C, H, W)  # Flatten to [B*T, 3, 224, 224]\n    features = model(flat_videos)                     # Extract features [B*T, 2048]\n    features = features.view(B, T, -1)                # Reshape to [B, T, 2048]\n\n    return features\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:16:23.736010Z","iopub.execute_input":"2025-05-22T11:16:23.736296Z","iopub.status.idle":"2025-05-22T11:16:23.741029Z","shell.execute_reply.started":"2025-05-22T11:16:23.736275Z","shell.execute_reply":"2025-05-22T11:16:23.740275Z"}},"outputs":[],"execution_count":38},{"cell_type":"code","source":"def train_model(model, train_loader, num_epochs, optimizer, device, resnext):\n    model.to(device)\n    model.train()\n\n    criterion = torch.nn.BCELoss()  # For binary classification\n\n    for epoch in range(num_epochs):\n        total_loss = 0.0\n        total_correct = 0\n        total_samples = 0\n\n        print(f\"\\nEpoch {epoch + 1}/{num_epochs}\")\n        \n        for batch_idx, (videos, labels) in enumerate(train_loader):\n            labels = labels.to(device).float()\n\n            optimizer.zero_grad()\n\n            # Extract ResNeXt features: shape = [B, T, 2048]\n            with torch.no_grad():  # Prevent gradient calc for ResNeXt\n                features = extract_resnext_features_batch(videos, resnext, device=device)\n\n            # Forward pass through LSTM classifier\n            outputs = model(features).squeeze()  # Shape: [B]\n\n            loss = criterion(outputs, labels)\n            loss.backward()\n            optimizer.step()\n\n            # Binary predictions using threshold 0.5\n            preds = (outputs >= 0.5).float()\n\n            batch_correct = (preds == labels).sum().item()\n            total_correct += batch_correct\n            total_samples += labels.size(0)\n            total_loss += loss.item()\n\n            batch_accuracy = batch_correct / labels.size(0)\n            running_accuracy = total_correct / total_samples\n\n            print(f\"Batch {batch_idx+1}: Loss={loss.item():.4f}, Batch Acc={batch_accuracy*100:.2f}%, Running Acc={running_accuracy*100:.2f}%\")\n\n        avg_loss = total_loss / (batch_idx + 1)\n        final_accuracy = total_correct / total_samples\n        print(f\"Epoch {epoch+1} Summary: Avg Loss={avg_loss:.4f}, Accuracy={final_accuracy*100:.2f}%\")\n","metadata":{"id":"z1QzV9WB4_nR","executionInfo":{"status":"aborted","timestamp":1747850430436,"user_tz":-330,"elapsed":179550,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:16:27.566256Z","iopub.execute_input":"2025-05-22T11:16:27.566999Z","iopub.status.idle":"2025-05-22T11:16:27.573339Z","shell.execute_reply.started":"2025-05-22T11:16:27.566959Z","shell.execute_reply":"2025-05-22T11:16:27.572641Z"}},"outputs":[],"execution_count":39},{"cell_type":"code","source":"import torch.optim as optim\n\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n\nmodel = LSTMModel().to(device)\noptimizer = optim.Adam(model.parameters(), lr=0.001)\n\n# assuming train_loader is ready with (videos, labels)\n\ntrain_model(model, train_loader, num_epochs=10, optimizer=optimizer, device=device,resnext=resnext)\n","metadata":{"id":"PgUosPHS5HXi","executionInfo":{"status":"aborted","timestamp":1747850430453,"user_tz":-330,"elapsed":179566,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:16:37.851249Z","iopub.execute_input":"2025-05-22T11:16:37.852015Z","iopub.status.idle":"2025-05-22T11:17:30.325755Z","shell.execute_reply.started":"2025-05-22T11:16:37.851986Z","shell.execute_reply":"2025-05-22T11:17:30.324797Z"}},"outputs":[{"name":"stdout","text":"\nEpoch 1/10\nBatch 1: Loss=0.6901, Batch Acc=50.00%, Running Acc=50.00%\nBatch 2: Loss=0.7210, Batch Acc=50.00%, Running Acc=50.00%\nBatch 3: Loss=0.6799, Batch Acc=50.00%, Running Acc=50.00%\nBatch 4: Loss=0.6782, Batch Acc=75.00%, Running Acc=56.25%\nBatch 5: Loss=0.7291, Batch Acc=50.00%, Running Acc=55.00%\nBatch 6: Loss=0.7096, Batch Acc=50.00%, Running Acc=54.17%\nBatch 7: Loss=0.6332, Batch Acc=75.00%, Running Acc=57.14%\nBatch 8: Loss=0.7837, Batch Acc=50.00%, Running Acc=56.25%\nBatch 9: Loss=0.6911, Batch Acc=50.00%, Running Acc=55.56%\nBatch 10: Loss=0.7058, Batch Acc=75.00%, Running Acc=57.50%\nBatch 11: Loss=0.7304, Batch Acc=25.00%, Running Acc=54.55%\nBatch 12: Loss=0.6837, Batch Acc=50.00%, Running Acc=54.17%\nBatch 13: Loss=0.7267, Batch Acc=25.00%, Running Acc=51.92%\nBatch 14: Loss=0.7983, Batch Acc=25.00%, Running Acc=50.00%\nBatch 15: Loss=0.6673, Batch Acc=75.00%, Running Acc=51.67%\nBatch 16: Loss=0.7343, Batch Acc=50.00%, Running Acc=51.56%\nBatch 17: Loss=0.7154, Batch Acc=50.00%, Running Acc=51.47%\nBatch 18: Loss=0.6800, Batch Acc=75.00%, Running Acc=52.78%\nBatch 19: Loss=0.7787, Batch Acc=25.00%, Running Acc=51.32%\nBatch 20: Loss=0.8283, Batch Acc=0.00%, Running Acc=48.75%\nBatch 21: Loss=0.6962, Batch Acc=50.00%, Running Acc=48.81%\nBatch 22: Loss=0.5657, Batch Acc=100.00%, Running Acc=51.14%\nBatch 23: Loss=0.7893, Batch Acc=25.00%, Running Acc=50.00%\nBatch 24: Loss=0.7300, Batch Acc=25.00%, Running Acc=48.96%\nBatch 25: Loss=0.7478, Batch Acc=50.00%, Running Acc=49.00%\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_5367/2135826919.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# assuming train_loader is ready with (videos, labels)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mtrain_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_loader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_epochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdevice\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mresnext\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mresnext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/tmp/ipykernel_5367/2461886524.py\u001b[0m in \u001b[0;36mtrain_model\u001b[0;34m(model, train_loader, num_epochs, optimizer, device, resnext)\u001b[0m\n\u001b[1;32m     31\u001b[0m             \u001b[0mpreds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0moutputs\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 33\u001b[0;31m             \u001b[0mbatch_correct\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mpreds\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     34\u001b[0m             \u001b[0mtotal_correct\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mbatch_correct\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m             \u001b[0mtotal_samples\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}],"execution_count":40},{"cell_type":"code","source":"def test(model, test_loader, resnext, device):\n    model.eval()\n    criterion = torch.nn.BCELoss()\n\n    running_loss = 0.0\n    running_correct = 0\n    total_samples = 0\n\n    print(\"Testing...\\n\")\n\n    with torch.no_grad():\n        batch_num = 0\n        for videos, labels in test_loader:\n            batch_num += 1\n\n            # Move to device\n            videos = videos.to(device)             # [B, T, C, H, W]\n            labels = labels.float().to(device)     # [B]\n\n            # Extract features using ResNeXt\n            features = extract_resnext_features_batch(videos, resnext, device=device)  # [B, T, 2048]\n\n            # Forward pass through LSTM-based model\n            outputs = model(features).squeeze()    # [B], probabilities\n            loss = criterion(outputs, labels)\n\n            # Predictions\n            preds = (outputs >= 0.5).float()       # [B]\n\n            # Print predictions for each sample\n            print(f\"Batch {batch_num}:\")\n            for i in range(labels.size(0)):\n                actual = int(labels[i].item())\n                predicted = int(preds[i].item())\n                probability = outputs[i].item()\n                print(f\"  Sample {total_samples + i + 1}: Predicted = {predicted}, Probability = {probability:.4f}, True = {actual}\")\n\n            # Accuracy metrics\n            batch_correct = (preds == labels).sum().item()\n            batch_accuracy = batch_correct / labels.size(0)\n            running_correct += batch_correct\n            total_samples += labels.size(0)\n            running_accuracy = running_correct / total_samples\n            running_loss += loss.item()\n\n            print(f\"  --> Loss={loss.item():.4f}, Batch Acc={batch_accuracy*100:.2f}%, Running Acc={running_accuracy*100:.2f}%\\n\")\n\n    avg_loss = running_loss / batch_num\n    print(f\"\\nTest Summary: Avg Loss={avg_loss:.4f}, Final Accuracy={running_accuracy*100:.2f}%\")\n","metadata":{"id":"ikYEthdwBe50","executionInfo":{"status":"aborted","timestamp":1747850430454,"user_tz":-330,"elapsed":179565,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:01:14.117845Z","iopub.status.idle":"2025-05-22T11:01:14.118056Z","shell.execute_reply.started":"2025-05-22T11:01:14.117951Z","shell.execute_reply":"2025-05-22T11:01:14.117961Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import torch\n\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nmodel.to(device)\n\n# Call the test function\ntest(model, test_loader,resnext, device)","metadata":{"id":"mKVerLOPCM6v","executionInfo":{"status":"aborted","timestamp":1747850430455,"user_tz":-330,"elapsed":179565,"user":{"displayName":"Vedant Singh","userId":"09119702006742817659"}},"trusted":true,"execution":{"iopub.status.busy":"2025-05-22T11:01:14.119254Z","iopub.status.idle":"2025-05-22T11:01:14.119592Z","shell.execute_reply.started":"2025-05-22T11:01:14.119431Z","shell.execute_reply":"2025-05-22T11:01:14.119449Z"}},"outputs":[],"execution_count":null}]}